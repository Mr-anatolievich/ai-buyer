#!/bin/bash

# AI-Buyer Quick Start Script
# –¶–µ–π —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î –≤—Å—é ML –ø–ª–∞—Ç—Ñ–æ—Ä–º—É

echo "üöÄ AI-Buyer Quick Start"
echo "========================"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker —Ç–∞ Docker Compose"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    exit 1
fi

echo "‚úÖ Docker —Ç–∞ Docker Compose –∑–Ω–∞–π–¥–µ–Ω–æ"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
if [ ! -f .env.local ]; then
    echo "üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env.local —Ñ–∞–π–ª—É..."
    cp .env.development .env.local
    echo "‚ö†Ô∏è  –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ .env.local –∑ –≤–∞—à–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ Facebook API"
fi

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –¥–ª—è volume mounts
echo "üìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π..."
mkdir -p logs/backend
mkdir -p logs/frontend
mkdir -p logs/celery
mkdir -p data/clickhouse
mkdir -p data/kafka
mkdir -p data/redis
mkdir -p data/mlflow
mkdir -p data/minio
mkdir -p data/prometheus
mkdir -p data/grafana

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
echo "üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É..."
chmod -R 755 logs data

# –ó–±—ñ—Ä–∫–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo "üèóÔ∏è  –ó–±—ñ—Ä–∫–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
docker-compose down --remove-orphans
docker-compose build --no-cache
docker-compose up -d

# –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
sleep 30

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ health checks
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤—ñ—Å—ñ–≤..."

services=(
    "backend:8000/health"
    "frontend:3000"
    "clickhouse:8123/ping"
    "kafka:9092"
    "redis:6379"
    "mlflow:5000"
)

all_healthy=true

for service in "${services[@]}"; do
    name=$(echo $service | cut -d: -f1)
    url=$(echo $service | cut -d: -f2-)
    
    if [ "$name" = "kafka" ] || [ "$name" = "redis" ]; then
        if docker-compose ps $name | grep -q "Up"; then
            echo "‚úÖ $name: Working"
        else
            echo "‚ùå $name: Not running"
            all_healthy=false
        fi
    else
        if curl -s -f http://localhost:$url > /dev/null 2>&1; then
            echo "‚úÖ $name: http://localhost:$url"
        else
            echo "‚ùå $name: http://localhost:$url (not responding)"
            all_healthy=false
        fi
    fi
done

echo ""
echo "========================"

if [ "$all_healthy" = true ]; then
    echo "üéâ –í—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:"
    echo "   Frontend:        http://localhost:3000"
    echo "   Backend API:     http://localhost:8000"
    echo "   API Docs:        http://localhost:8000/docs"
    echo "   ClickHouse:      http://localhost:8123"
    echo "   MLflow:          http://localhost:5000"
    echo "   Kafka UI:        http://localhost:8080"
    echo "   MinIO:           http://localhost:9001"
    echo "   Grafana:         http://localhost:3001 (admin/admin)"
    echo "   Prometheus:      http://localhost:9090"
    echo ""
    echo "üìù –î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ª–æ–≥—ñ–≤: docker-compose logs -f [service_name]"
    echo "üõë –î–ª—è –∑—É–ø–∏–Ω–∫–∏: docker-compose down"
else
    echo "‚ö†Ô∏è  –î–µ—è–∫—ñ —Å–µ—Ä–≤—ñ—Å–∏ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    echo "üìù –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: docker-compose logs"
fi

echo ""
echo "üìñ –î–µ—Ç–∞–ª—å–Ω—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é –¥–∏–≤—ñ—Ç—å—Å—è —É README.md"