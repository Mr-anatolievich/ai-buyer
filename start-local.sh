#!/bin/bash

# AI-Buyer Local Development Startup Script
# –ó–∞–ø—É—Å–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ –±–µ–∑ Docker –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏

echo "üöÄ AI-Buyer Local Development Start"
echo "=================================="

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    exit 1
fi

echo "‚úÖ Python $(python3 --version) –∑–Ω–∞–π–¥–µ–Ω–æ"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    exit 1
fi

echo "‚úÖ Node.js $(node --version) –∑–Ω–∞–π–¥–µ–Ω–æ"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ OpenMP –¥–ª—è ML –±—ñ–±–ª—ñ–æ—Ç–µ–∫ (macOS)
if [[ "$OSTYPE" == "darwin"* ]]; then
    if ! brew list libomp &> /dev/null; then
        echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è OpenMP –¥–ª—è ML –±—ñ–±–ª—ñ–æ—Ç–µ–∫..."
        brew install libomp > /dev/null 2>&1
        echo "‚úÖ OpenMP –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    else
        echo "‚úÖ OpenMP –¥–æ—Å—Ç—É–ø–Ω–∏–π"
    fi
fi

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env.local —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
if [ ! -f .env.local ]; then
    echo "üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env.local..."
    cp .env.development .env.local
fi

echo ""
echo "üéØ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤:"
echo ""

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –ª–æ–≥—ñ–≤
mkdir -p logs

# 1. Frontend
echo "üåê –ó–∞–ø—É—Å–∫ Frontend (React)..."
cd frontend
npm install > /dev/null 2>&1
nohup npm run dev > ../logs/frontend.log 2>&1 &
FRONTEND_PID=$!
cd ..

# –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É frontend
sleep 5

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ frontend –∑–∞–ø—É—Å—Ç–∏–≤—Å—è
if curl -s http://localhost:8080 > /dev/null 2>&1; then
    echo "‚úÖ Frontend: http://localhost:8080"
else
    echo "‚ö†Ô∏è  Frontend: –ó–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è... (–ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–µ—Ä–µ–∑ —Ö–≤–∏–ª–∏–Ω—É)"
fi

# 2. Backend (Mock API –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏)
echo "üîß –ó–∞–ø—É—Å–∫ Mock Backend API..."

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ—Å–Ω—É—î mock_server.py
if [ ! -f "mock_server.py" ]; then
    echo "‚ùå mock_server.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ backend/simple_main.py"
    if [ ! -f "backend/simple_main.py" ]; then
        echo "‚ùå backend/simple_main.py —Ç–∞–∫–æ–∂ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
        exit 1
    fi
    cp backend/simple_main.py mock_server.py
fi

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î
if [ ! -d "venv" ]; then
    echo "üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
source venv/bin/activate

echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
pip install fastapi uvicorn > /dev/null 2>&1

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ML –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —è–∫—â–æ backend/requirements.txt —ñ—Å–Ω—É—î
if [ -f "backend/requirements.txt" ]; then
    echo "ü§ñ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ML –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    echo "   (–¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É)"
    
    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip
    pip install --upgrade pip > /dev/null 2>&1
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è ML –ø–∞–∫–µ—Ç—ñ–≤ (–ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø—Ä–æ–±–ª–µ–º–Ω—ñ)
    echo "   üìä –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö ML –±—ñ–±–ª—ñ–æ—Ç–µ–∫..."
    pip install pandas numpy scikit-learn mlflow > /dev/null 2>&1
    
    echo "   üöÄ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö ML —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤..."
    pip install xgboost lightgbm prophet statsmodels > /dev/null 2>&1
    
    echo "   üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤..."
    pip install redis pymongo clickhouse-driver celery plotly > /dev/null 2>&1
    
    echo "   ‚úÖ ML —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞!"
else
    echo "‚ö†Ô∏è  backend/requirements.txt –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ ML –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ"
fi

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
nohup python mock_server.py > logs/backend.log 2>&1 &
BACKEND_PID=$!

# –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å–∫—É backend
sleep 3

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ backend –∑–∞–ø—É—Å—Ç–∏–≤—Å—è
if curl -s http://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ Backend API: http://localhost:8000"
    echo "‚úÖ API Docs: http://localhost:8000/docs"
else
    echo "‚ö†Ô∏è  Backend API: –ó–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è... (–ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–µ—Ä–µ–∑ —Ö–≤–∏–ª–∏–Ω—É)"
fi

echo ""
echo "=========================="
echo "üéâ AI-Buyer –∑–∞–ø—É—â–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ!"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:"
echo "   Frontend:    http://localhost:8080"
echo "   Backend API: http://localhost:8000"
echo "   API Docs:    http://localhost:8000/docs"
echo ""
echo "üìù –õ–æ–≥–∏:"
echo "   Frontend: logs/frontend.log"
echo "   Backend:  logs/backend.log"
echo ""
echo "üõë –î–ª—è –∑—É–ø–∏–Ω–∫–∏: ./stop-local.sh"
echo "üìñ –ü–æ–≤–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: README.md"

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è PID –¥–ª—è –∑—É–ø–∏–Ω–∫–∏
mkdir -p logs
echo $FRONTEND_PID > logs/frontend.pid
echo $BACKEND_PID > logs/backend.pid

echo ""
echo "‚ú® –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:8080 —É –±—Ä–∞—É–∑–µ—Ä—ñ"