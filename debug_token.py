#!/usr/bin/env python3
import urllib.request
import urllib.parse
import json
import sys

def debug_facebook_token(token):
    """–î–µ—Ç–∞–ª—å–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è Facebook —Ç–æ–∫–µ–Ω–∞"""
    
    print(f"üîç –ü–æ—á–∞—Ç–æ–∫ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ç–æ–∫–µ–Ω–∞...")
    print(f"üìù –¢–æ–∫–µ–Ω: {token[:20]}...")
    
    # –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –±–∞–∑–æ–≤—É –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
    print(f"\n=== –ö–†–û–ö 1: –ë–∞–∑–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ ===")
    
    try:
        # –°–ø—Ä–æ—â–µ–Ω–∏–π –∑–∞–ø–∏—Ç –¥–æ /me –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
        url = f"https://graph.facebook.com/v19.0/me?access_token={token}"
        print(f"üåê URL: {url}")
        
        request = urllib.request.Request(url)
        request.add_header('User-Agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36')
        
        with urllib.request.urlopen(request) as response:
            data = json.loads(response.read().decode('utf-8'))
            print(f"‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∞—Ü—é—î! User ID: {data.get('id')}, Name: {data.get('name', 'N/A')}")
            user_id = data.get('id')
            
    except urllib.error.HTTPError as e:
        error_data = e.read().decode('utf-8')
        print(f"‚ùå –ö—Ä–æ–∫ 1 –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: HTTP {e.code}")
        print(f"üìã –í—ñ–¥–ø–æ–≤—ñ–¥—å: {error_data}")
        return False
    except Exception as e:
        print(f"‚ùå –ö—Ä–æ–∫ 1 –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: {e}")
        return False
    
    # –ö—Ä–æ–∫ 2: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–æ–∫–µ–Ω–∞
    print(f"\n=== –ö–†–û–ö 2: Debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω–∞ ===")
    
    try:
        debug_url = f"https://graph.facebook.com/debug_token?input_token={token}&access_token={token}"
        print(f"üåê URL: {debug_url}")
        
        request = urllib.request.Request(debug_url)
        with urllib.request.urlopen(request) as response:
            debug_data = json.loads(response.read().decode('utf-8'))
            token_info = debug_data.get('data', {})
            
            print(f"‚úÖ Debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–∞:")
            print(f"   üì± App ID: {token_info.get('app_id')}")
            print(f"   üë§ User ID: {token_info.get('user_id')}")
            print(f"   ‚è∞ –î—ñ–π—Å–Ω–∏–π: {token_info.get('is_valid')}")
            print(f"   üìÖ –°—Ç–≤–æ—Ä–µ–Ω–æ: {token_info.get('issued_at')}")
            print(f"   ‚è≥ –¢–µ—Ä–º—ñ–Ω –¥—ñ—ó: {token_info.get('expires_at')}")
            print(f"   üîê –¢–∏–ø: {token_info.get('type')}")
            print(f"   üìã –î–æ–∑–≤–æ–ª–∏: {token_info.get('scopes', [])}")
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–æ–∫ 2 –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: {e}")
    
    # –ö—Ä–æ–∫ 3: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–∑–≤–æ–ª–∏ —Ç–æ–∫–µ–Ω–∞
    print(f"\n=== –ö–†–û–ö 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∑–≤–æ–ª—ñ–≤ ===")
    
    try:
        perms_url = f"https://graph.facebook.com/v19.0/me/permissions?access_token={token}"
        print(f"üåê URL: {perms_url}")
        
        request = urllib.request.Request(perms_url)
        with urllib.request.urlopen(request) as response:
            perms_data = json.loads(response.read().decode('utf-8'))
            
            print(f"‚úÖ –î–æ–∑–≤–æ–ª–∏ –æ—Ç—Ä–∏–º–∞–Ω—ñ:")
            for perm in perms_data.get('data', []):
                status = "‚úÖ" if perm.get('status') == 'granted' else "‚ùå"
                print(f"   {status} {perm.get('permission')}")
                
    except Exception as e:
        print(f"‚ùå –ö—Ä–æ–∫ 3 –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: {e}")
    
    # –ö—Ä–æ–∫ 4: –¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ API endpoints
    print(f"\n=== –ö–†–û–ö 4: –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API endpoints ===")
    
    # –¢–µ—Å—Ç A: /me/accounts (Pages)
    print(f"\nüß™ –¢–µ—Å—Ç A: Facebook Pages (/me/accounts)")
    try:
        accounts_url = f"https://graph.facebook.com/v19.0/me/accounts?access_token={token}"
        request = urllib.request.Request(accounts_url)
        with urllib.request.urlopen(request) as response:
            accounts_data = json.loads(response.read().decode('utf-8'))
            print(f"‚úÖ Pages: {len(accounts_data.get('data', []))} –∑–Ω–∞–π–¥–µ–Ω–æ")
            for page in accounts_data.get('data', [])[:3]:  # –ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—ñ 3
                print(f"   üìÑ {page.get('name')} (ID: {page.get('id')})")
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç A –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: {e}")
    
    # –¢–µ—Å—Ç B: /me/adaccounts
    print(f"\nüß™ –¢–µ—Å—Ç B: Ad Accounts (/me/adaccounts)")
    try:
        adaccounts_url = f"https://graph.facebook.com/v19.0/me/adaccounts?access_token={token}&fields=id,name,account_status"
        request = urllib.request.Request(adaccounts_url)
        with urllib.request.urlopen(request) as response:
            ad_data = json.loads(response.read().decode('utf-8'))
            print(f"‚úÖ Ad Accounts: {len(ad_data.get('data', []))} –∑–Ω–∞–π–¥–µ–Ω–æ")
            for account in ad_data.get('data', [])[:3]:
                print(f"   üìä {account.get('name')} (ID: {account.get('id')}, Status: {account.get('account_status')})")
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç B –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: {e}")
    
    # –¢–µ—Å—Ç C: Businesses
    print(f"\nüß™ –¢–µ—Å—Ç C: Businesses (/me/businesses)")
    try:
        business_url = f"https://graph.facebook.com/v19.0/me/businesses?access_token={token}"
        request = urllib.request.Request(business_url)
        with urllib.request.urlopen(request) as response:
            business_data = json.loads(response.read().decode('utf-8'))
            print(f"‚úÖ Businesses: {len(business_data.get('data', []))} –∑–Ω–∞–π–¥–µ–Ω–æ")
            for business in business_data.get('data', [])[:3]:
                print(f"   üè¢ {business.get('name')} (ID: {business.get('id')})")
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç C –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è: {e}")
    
    print(f"\nüéØ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return True

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python3 debug_token.py <FACEBOOK_TOKEN>")
        print("–ü—Ä–∏–∫–ª–∞–¥: python3 debug_token.py EAABs...")
        sys.exit(1)
    
    token = sys.argv[1]
    debug_facebook_token(token)