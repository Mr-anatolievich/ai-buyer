[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-buyer-backend"
version = "1.0.0"
description = "ML-powered Facebook advertising optimization backend"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "AI-Buyer Team", email = "team@ai-buyer.com" }
]
maintainers = [
    { name = "AI-Buyer Team", email = "team@ai-buyer.com" }
]
keywords = ["machine-learning", "facebook-ads", "optimization", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.9.0",
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "scikit-learn>=1.5.0",
    "deepctr>=0.9.0",
    "prophet>=1.1.0",
    "mlflow>=2.16.0",
    "clickhouse-driver>=0.2.9",
    "redis>=5.2.0",
    "kafka-python>=2.0.0",
    "celery[redis]>=5.4.0",
    "facebook-business>=20.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.8.0",
    "isort>=5.13.0",
    "flake8>=7.1.0",
    "mypy>=1.11.0",
]
ml = [
    "tensorflow>=2.17.0",
    "torch>=2.4.0",
    "lightgbm>=4.5.0",
    "xgboost>=2.1.0",
    "optuna>=4.0.0",
    "shap>=0.46.0",
]
monitoring = [
    "prometheus-client>=0.21.0",
    "structlog>=24.4.0",
    "python-json-logger>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Mr-anatolievich/ai-buyer"
Documentation = "https://ai-buyer.readthedocs.io/"
Repository = "https://github.com/Mr-anatolievich/ai-buyer"
"Bug Tracker" = "https://github.com/Mr-anatolievich/ai-buyer/issues"

[project.scripts]
ai-buyer-backend = "api.main:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["api*", "ml*", "services*", "tasks*"]
exclude = ["tests*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["api", "ml", "services", "tasks"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "deepctr.*",
    "prophet.*",
    "kafka.*",
    "facebook_business.*",
    "clickhouse_driver.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=api --cov=ml --cov=services --cov=tasks"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["api", "ml", "services", "tasks"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]